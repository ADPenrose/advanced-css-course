.popup {
	height: 100vh;
	width: 100%;
	background-color: rgba($color-black, 0.8);
	// padding: 15rem 25rem;
	position: fixed;
	top: 0;
	left: 0;
	z-index: 30;
	// Hidding the popup
	opacity: 0;
	visibility: hidden;
	transition: all 0.3s;

	@supports (backdrop-filter: blur(10px)) {
		backdrop-filter: blur(10px);
		background-color: rgba($color-black, 0.3);
	}

	&__content {
		// Centering using abs positioning
		@include absoluteCenter;
		background-color: $color-white;
		width: 75%;
		box-shadow: 0 2rem 4rem rgba($color-black, 0.2);
		border-radius: 3px;
		overflow: hidden;
		// In order to give both children the same height.
		display: table;
		// Giving some default properties so that we have a cool animation where
		// the pop up is generated from the center of the page.
		opacity: 0;
		// Also, we have to repeat the transform that comes from the mixin
		// here so that both are applied, since we can only have one transform
		// per declaration block.
		transform: translate(-50%, -50%) scale(0.5);
		transition: all 0.5s;
	}

	&__left {
		width: 33.3333%;
		// In order to give the boxes the same height.
		display: table-cell;

		@include respond(tab-land) {
			display: none;
		}
	}

	&__right {
		width: 66.6667%;
		// In order to give the boxes the same height.
		display: table-cell;
		vertical-align: middle;
		padding: 3rem 5rem;
	}

	&__img {
		display: block;
		width: 100%;
	}

	&__text {
		font-size: 1.4rem;
		margin-bottom: 4rem;
		// Separating the text into two colums
		column-count: 2;
		column-gap: 4rem;
		column-rule: 1px solid $color-grey-light-2;

		// Automatic hyphenation
		-ms-hyphens: auto;
		hyphens: auto;
	}

	// When the popup id is targeted (we are on that section), this will happen.
	// Popup open
	&:target {
		opacity: 1;
		visibility: visible;
	}

	&:target &__content {
		opacity: 1;
		transform: translate(-50%, -50%) scale(1);
	}

	&__close {
		&:link,
		&:visited {
			color: $color-grey;
			position: absolute;
			top: 2.5rem;
			right: 2.5rem;
			line-height: 1;
			font-size: 3rem;
			text-decoration: none;
			display: inline-block;
		}

		&:hover,
		&:active {
			color: $color-primary;
		}
	}
}
